AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for s3 bucket
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: template-s3-1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BloclPublicPolicy: false
        IgnorePublicAcls: false
        RestricPublicBuckets: false
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: template-s3-2
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BloclPublicPolicy: false
        IgnorePublicAcls: false
        RestricPublicBuckets: false

  CFNLambda:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: lambda-index
      Handler: lambda/lambda-index.lambda_handler
      Role: 
        'Fn::GetAtt':
          -CFNLambdaRole
          -Arn
      Code: 
        S3Bucket:
        S3Key:
      Runtime: python3.7
      Timeout: 300
  CFALambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn_lambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principle: 
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: AmazonS3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:*',
                  - 's3-object-lambda:*'
                Resource: 
                  - '*'
        - PolicyName: AmazonRekognitionFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "rekognition:*"
                Resource: 
                  - "*"
        - PolicyName: AmazonLexFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "cloudwatch:GetMetricStatistics",
                  - "cloudwatch:DescribeAlarms",
                  - "cloudwatch:DescribeAlarmsForMetric",
                  - "kms:DescribeKey",
                  - "kms:ListAliases",
                  - "lambda:GetPolicy",
                  - "lambda:ListFunctions",
                  - "lex:*",
                  - "polly:DescribeVoices",
                  - "polly:SynthesizeSpeech",
                  - "kendra:ListIndices",
                  - "iam:ListRoles",
                  - "s3:ListAllMyBuckets",
                  - "logs:DescribeLogGroups",
                  - "s3:GetBucketLocation"
                Resource: 
                  - "*"
        - PolicyName: AmazonOpenSearchServiceFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "es:*"
                Resource: 
                  - "*"
  CFNLambda:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: lambda-search
      Handler: lambda/lambda-search.lambda_handler
      Role: 
        'Fn::GetAtt':
          -CFNLambdaRole
          -Arn
      Runtime: python3.7
      Timeout: 300
  CFALambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-search-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principle: 
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: AmazonS3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:*',
                  - 's3-object-lambda:*'
                Resource: 
                  - '*'
        - PolicyName: AmazonRekognitionFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "rekognition:*"
                Resource: 
                  - "*"
        - PolicyName: AmazonLexFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "cloudwatch:GetMetricStatistics",
                  - "cloudwatch:DescribeAlarms",
                  - "cloudwatch:DescribeAlarmsForMetric",
                  - "kms:DescribeKey",
                  - "kms:ListAliases",
                  - "lambda:GetPolicy",
                  - "lambda:ListFunctions",
                  - "lex:*",
                  - "polly:DescribeVoices",
                  - "polly:SynthesizeSpeech",
                  - "kendra:ListIndices",
                  - "iam:ListRoles",
                  - "s3:ListAllMyBuckets",
                  - "logs:DescribeLogGroups",
                  - "s3:GetBucketLocation"
                Resource: 
                  - "*"
        - PolicyName: AmazonOpenSearchServiceFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "es:*"
                Resource: 
                  - "*"
  ES:  
    Type: AWS::OpenSearchService::Domain
    Properties: 
      AccessPolicies: Json
      DomainName: photos
      EngineVersion: Elasticsearch_7.1
      
  APIGATEWAY:
    ApiGatewayCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
                Resource: "*"
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayCloudWatchLogsRole.Arn 


